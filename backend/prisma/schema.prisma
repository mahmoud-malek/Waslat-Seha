generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  phoneNumber   String    @unique
  email         String?	  @unique
  password      String
  role          Role      @default(PATIENT)
  profileImage  String?   // URL or path to the stored image
  profile       Profile?
  appointments  Appointment[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Profile {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  address     String?
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       @unique
  doctor      Doctor?
}

model Doctor {
  id            Int       @id @default(autoincrement())
  profile       Profile   @relation(fields: [profileId], references: [id])
  profileId     Int       @unique
  speciality    String
  experience    Int
  bio           String?
  price         Float
  availability  Availability[]
  appointments  Appointment[]
}

model Availability {
  id        Int       @id @default(autoincrement())
  doctor    Doctor    @relation(fields: [doctorId], references: [id])
  doctorId  Int
  dayOfWeek Int      // 0-6 (Sunday-Saturday)
  startTime DateTime
  endTime   DateTime
}

model Appointment {
  id          Int       @id @default(autoincrement())
  patient     User      @relation(fields: [patientId], references: [id])
  patientId   Int
  doctor      Doctor    @relation(fields: [doctorId], references: [id])
  doctorId    Int
  datetime    DateTime
  status      AppointmentStatus @default(PENDING)
  notes       String?
  createdAt   DateTime  @default(now())
}

enum Role {
  ADMIN
  DOCTOR
  PATIENT
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
  RESCHEDULED
}